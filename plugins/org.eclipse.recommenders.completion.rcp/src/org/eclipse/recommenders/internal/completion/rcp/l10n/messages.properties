PROPOSAL_LABEL_DISCOVER_EXTENSIONS=Not what you\u2019re looking for? \
 Discover new extensions to Code Recommenders
PROPOSAL_LABEL_ENABLED_COMPLETION=Code Recommenders is enabled
PROPOSAL_LABEL_NO_PROPOSALS=No proposals

PROPOSAL_TOOLTIP_DISCOVER_EXTENSIONS=There are quite a few extensions available to Code Recommenders. \
 Press Return to learn more about Code Recommenders\u2019 incubation projects or about how to leverage the power of crowd\u2010sourcing in your IDE.
PROPOSAL_TOOLTIP_ENABLED_COMPLETION=Code Recommenders improves Eclipse\u2019s built\u2010in code completion by showing you how others have used an API before. \
 Additionally, subwords completion allows you to search for subword matches rather than just prefix matches in Content Assist.\n\n\
 By default, both Code Recommenders and subwords completion are enabled, but you may customize their behavior at <a href="{1}">{0}</a>.\n\n\
 To learn more about Code Recommenders and Subwords, please visit the <a href="{2}">project homepage</a> or consult the <a href="{3}">manual</a>.
PROPOSAL_CATEGORY_CODE_RECOMMENDERS=Eclipse Code Recommenders

PREFPAGE_TITLE_COMPLETIONS=Code Completion

PREFPAGE_DESCRIPTION_COMPLETIONS=Configure which session processors to use with Code Recommenders code completion. \
 Processors may offer advanced configuration options.

PREFPAGE_FOOTER_COMPLETIONS=Note that Code Recommenders Java Proposals are a replacement of JDT\u2019s Java Proposals. \
 As such Code Recommenders deactivates itself if it finds JDT or Mylyn activated on the <a>default content assist list</a>.

BUTTON_LABEL_CONFIGURE=Configure

FIELD_LABEL_SESSION_PROCESSORS=Session Processors:
FIELD_LABEL_ENABLE_COMPLETION=Enable Code Recommenders code completion

FIELD_TOOLTIP_ENABLE_COMPLETION=Enabling Code Recommenders code completion will disable Mylyn and JDT\u2019s Java Proposals. \
 Disabling will re\u2010enable either Mylyn or JDT\u2019s Java Proposals.

JOB_DISABLING_CONTENT_ASSIST_CATEGORY=Disabling Content Assist category {0}
JOB_ENABLING_CONTENT_ASSIST_CATEGORY=Enabling Content Assist category {0}

LOG_ERROR_COMPLETION_FAILURE_DURING_DEBUG_MODE=The following problem was encountered: \u2018{0}\u2019.
LOG_ERROR_EXCEPTION_DURING_CODE_COMPLETION=Exception during code completion.
LOG_ERROR_EXCEPTION_DURING_CODE_COMPLETION_AT_OFFSET=Exception during code completion in \u2018{0}\u2019 at offset {1}.
LOG_ERROR_EXCEPTION_WHILE_COMPUTING_LOOKUP_ENVIRONMENT=Cannot access LookupEnvironment by reflection.
LOG_ERROR_FAILED_TO_FLUSH_PREFERENCES=Failed to flush preferences.
LOG_ERROR_FAILED_TO_INSTANTIATE_COMPLETION_TIP=Failed to instantiate completion tip.
LOG_ERROR_FAILED_TO_LOAD_COMPLETION_PROPOSAL_CLASS=Error while loading completion proposal class.
LOG_ERROR_FAILED_TO_PARSE_TYPE_NAME=Could not parse type name: \u2018{0}\u2019
LOG_ERROR_FAILED_TO_SET_PROPOSAL_INFO=Failed to set proposal info to \u2018{0}\u2019. Returning proposal without additional info.
LOG_ERROR_FAILED_TO_WRAP_JDT_PROPOSAL=Wrapping JDT proposal \u2018{0}\u2019 (\u2018{1}\u2019) failed. Returning original proposal instead.
LOG_ERROR_SESSION_PROCESSOR_FAILED=Session processor \u2018{0}\u2019 failed with exception.
LOG_ERROR_SYNTATICALLY_INCORRECT_METHOD_NAME=Syntactically incorrect method name \u2018{0}\u2019 for completion proposal \u2018{1}\u2019.
LOG_ERROR_UNEXPECTED_PROPOSAL_KIND=Unknown JDT proposal type \u2018{0}\u2019 (in \u2018{1}\u2019). \
 Returning original proposal instead, but please report this incident to improve proposal matching.
LOG_ERROR_PROPOSAL_MATCHING_FAILED=Proposal matching failed for \u2018{0}\u2019.

LOG_INFO_FALLBACK_METHOD_NAME_CREATION=Creating method name for completion proposal \u2018{0}\u2019 using fallback.

LOG_WARNING_LINKAGE_ERROR=Internal class could not be linked. Functionality may be limited.
